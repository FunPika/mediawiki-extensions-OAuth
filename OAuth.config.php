<?php

# ######## Configuration variables ########
# IMPORTANT: DO NOT EDIT THIS FILE
# When configuring globals, set them at LocalSettings.php instead

/**
 * @var string Wiki ID of OAuth management wiki
 * On wiki farms, it makes sense to set this to a wiki that acts as a portal
 * site, is decidated to management, or just handles login/authentication. It
 * can, however, be set to any wiki if the farm. For single-wiki sites or farms
 * where each wiki manages consumers separately, it should be left as false.
 */
$wgMWOAuthCentralWiki = false;

/**
 * @var Array Map of (grant => right => boolean)
 * Users authorize consumers (like Apps) to act on their behalf but only with
 * a subset of the user's normal account rights (signed off on by the user).
 * The possible rights to grant to a consumer are bundled into groups called
 * "grants". Each grant defines some rights it lets consumers inherit from the
 * account they may act on behalf of. Note that a user granting a right does
 * nothing if that user does not actually have that right to begin with.
 */
$wgMWOAuthGrantPermissions = array();

// @TODO: clean up grants
// @TODO: auto-include read/editsemiprotected rights?

$wgMWOAuthGrantPermissions['editpage']['read'] = true;
$wgMWOAuthGrantPermissions['editpage']['edit'] = true;
$wgMWOAuthGrantPermissions['editpage']['minoredit'] = true;
$wgMWOAuthGrantPermissions['editpage']['editsemiprotected'] = true;

$wgMWOAuthGrantPermissions['createeditmovepage']['read'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['createpage'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['createtalk'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['edit'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['move'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['minoredit'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['editsemiprotected'] = true;

$wgMWOAuthGrantPermissions['uploadfile']['read'] = true;
$wgMWOAuthGrantPermissions['uploadfile']['upload'] = true;
$wgMWOAuthGrantPermissions['uploadfile']['reupload-own'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['editsemiprotected'] = true;

$wgMWOAuthGrantPermissions['uploadeditmovefile']['read'] = true;
$wgMWOAuthGrantPermissions['uploadeditmovefile']['upload'] = true;
$wgMWOAuthGrantPermissions['uploadeditmovefile']['reupload'] = true;
$wgMWOAuthGrantPermissions['uploadeditmovefile']['move-file'] = true;
$wgMWOAuthGrantPermissions['createeditmovepage']['editsemiprotected'] = true;

/** @var integer Seconds after which an idle consumer request is marked as "expired" */
$wgMWOAuthRequestExpirationAge = 30 * 86400;

$wgAvailableRights[] = 'mwoauthproposeconsumer';
$wgAvailableRights[] = 'mwoauthupdateconsumer';
$wgAvailableRights[] = 'mwoauthmanageconsumer';
$wgAvailableRights[] = 'mwoauthsuppress';
$wgAvailableRights[] = 'mwoauthviewsuppressed';
$wgAvailableRights[] = 'mwoauthviewprivate';
$wgAvailableRights[] = 'mwoauthmanagemygrants';

$wgGroupPermissions['user']['mwoauthmanagemygrants'] = true;

# End of configuration variables.
# ########
